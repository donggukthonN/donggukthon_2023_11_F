name: client-actions

on:
  push:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Cache node modules
      #   uses: actions/cache@v3.3.2
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # - name: Install Yarn
      #   run: npm install -g yarn

      # - name: Install dependencies
      #   run: yarn install

      - name: Build
        run: yarn build
        

      - name: Docker build & push to hub
        run: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker build -f Dockerfile.dev -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}:latest .
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROD_REPONAME }}:latest

  cd:
    needs: [ci]
    runs-on: ubuntu-20.04

    steps:
        - name: Docker Image Pull and Compose UP
          uses: appleboy/ssh-action@v1.0.0
          with:
            host: ${{ secrets.HOST }}
            username : ${{ secrets.USERNAME }}
            key : ${{ secrets.PRIVATE_KEY }}
            script: |
                sudo docker compose down
                sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROD_REPONAME }}:latest
                docker compose up -d 
                docker image prune -f
